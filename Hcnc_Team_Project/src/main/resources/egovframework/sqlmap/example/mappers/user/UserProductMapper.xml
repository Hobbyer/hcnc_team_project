<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="user.mapper.UserProductMapper">
	<resultMap id="ProductDescriptionResult" type="hashmap">
	    <result property="PRODUCT_ID" column="PRODUCT_ID" jdbcType="BIGINT"/>
	    <result property="DETAIL_DESCRIPTION" column="DETAIL_DESCRIPTION" jdbcType="CLOB" javaType="String"/>
	</resultMap>

	<!-- 상품 조회 -->
	<!--
	<select id="selectProductByUser" parameterType="java.util.Map" resultType="java.util.HashMap">
		SELECT P.PRODUCT_CODE, P.PRODUCT_NAME, P.PRODUCT_PRICE, P.SALED_PRICE, P.PRODUCT_CONTENT, P.PRODUCT_WEIGHT, P.IS_VISIBLE
					,PI.IMAGE_ID, PI.IMAGE_URL, PI.ALT_TEXT, PI.SORT_NUMBER, PI.IS_MAIN
			FROM PRODUCTS P
			INNER JOIN PRODUCT_IMG PI
				ON P.PRODUCT_ID = PI.PRODUCT_ID
			WHERE P.PRODUCT_ID = #{productId}
	</select>
	-->
	
	<select id="selectProductByUser" parameterType="java.util.Map" resultType="java.util.HashMap">
		SELECT P.PRODUCT_CODE, P.PRODUCT_NAME, P.PRODUCT_PRICE, P.SALED_PRICE, P.PRODUCT_CONTENT, P.PRODUCT_WEIGHT, P.IS_VISIBLE
			FROM PRODUCTS P
			WHERE 1=1
				AND P.PRODUCT_ID = #{productId}
	</select>
	
	<select id="slectOptionInfoByUser" parameterType="java.util.Map" resultType="java.util.HashMap">
		SELECT OPTION_ID, OPTION_NAME, OPTION_VALUE, ADDITIONAL_PRICE
			FROM OPTIONS
			WHERE 1=1
				AND	PRODUCT_ID = #{productId}
	</select>
	
	
	<!-- 메인에서 [NEW랑 추천] SORT로 관리하는 LIST용 : 나중에 PRODUCT IMG -->
	<select id="selectMNProductListByUser" resultType="java.util.Map">
	    SELECT  P.PRODUCT_ID
	           ,P.PRODUCT_CODE
	           ,P.PRODUCT_NAME
	           ,P.PRODUCT_PRICE
	           ,P.COST_PRICE
	           ,P.SALED_PRICE
	           ,P.PRODUCT_CONTENT
	           ,P.PRODUCT_WEIGHT
	           ,P.IS_VISIBLE
	           ,P.SORT_NUMBER
	           ,COALESCE(GROUP_CONCAT(O.OPTION_NAME, ':', O.OPTION_VALUE SEPARATOR ','), '') AS OPTIONS
	           ,COALESCE(COUNT(R.REVIEW_ID), 0) AS REVIEW_COUNT
	           ,COALESCE(AVG(R.STAR_POINT), 0) AS AVG_STAR_POINT
	    FROM PRODUCTS P
	    LEFT JOIN OPTIONS O
	      ON P.PRODUCT_ID = O.PRODUCT_ID
	    LEFT JOIN REVIEWS R
	      ON P.PRODUCT_ID = R.PRODUCT_ID
	     AND R.REVIEW_STATUS = '정상'   <!-- 정상 리뷰만 집계 -->
	    WHERE P.IS_VISIBLE = 'Y'
	      <if test="sortNumber != null and sortNumber != ''">
	        AND P.SORT_NUMBER = #{sortNumber}
	      </if>
	    GROUP BY  P.PRODUCT_ID 
	             ,P.PRODUCT_CODE
	             ,P.PRODUCT_NAME
	             ,P.PRODUCT_PRICE
	             ,P.COST_PRICE
	             ,P.SALED_PRICE
	             ,P.PRODUCT_CONTENT
	             ,P.PRODUCT_WEIGHT
	             ,P.IS_VISIBLE
	             ,P.SORT_NUMBER
	    ORDER BY P.SORT_NUMBER ASC
	</select>
	<!-- 메인에서 [NEW랑 추천] SORT로 관리하는 LIST용 -->
	

	<insert id="insertCartItemByUser" parameterType="java.util.Map">
		INSERT INTO CART_ITEMS (CART_ID, PRODUCT_ID, PRODUCT_OPTION, PRICE, QUANTITY, SUB_TOTAL)
			VALUES (#{cartId} , #{productId}, #{option}, #{price}, #{quantity}, #{subTotal} )
	</insert>
	
	
	<select id="selectProductQnAListByUser" parameterType="java.util.Map" resultType="java.util.HashMap">
		SELECT PRODUCT_QNA_ID, MEMBER_ID, QNA_TITLE, QNA_STATUS, DATE_FORMAT(INPUT_DT, '%Y-%m-%d') AS INPUT_DT, DATE_FORMAT(UPDATE_DT, '%Y-%m-%d') AS UPDATE_DT
			FROM PRODUCT_QNA
		  WHERE 1=1
		  	AND PRODUCT_ID = #{productId}
		  ORDER BY INPUT_DT DESC
	</select>
	
	<select id="selectQnADetailByUser" parameterType="java.util.Map" resultType="java.util.HashMap">
		SELECT PRODUCT_QNA_ID, MEMBER_ID, QNA_TITLE, QNA_CONTENT, DATE_FORMAT(INPUT_DT, '%Y-%m-%d') AS INPUT_DT, DATE_FORMAT(UPDATE_DT, '%Y-%m-%d') AS UPDATE_DT
			FROM PRODUCT_QNA
		  WHERE 1=1
		  	AND PRODUCT_QNA_ID = #{qnaId}
	</select>
	
	<select id="selectProductDescriptionByUser" parameterType="hashmap" resultMap="ProductDescriptionResult">
	    SELECT 
	        PRODUCT_ID,
	        DETAIL_DESCRIPTION
	    FROM PRODUCTS 
	    WHERE PRODUCT_ID = #{productId}
	</select>
	
	<!-- <select id="selectProductDescriptionByUser" parameterType="hashmap" resultMap="ProductDescriptionResult">
	    SELECT 
	        POST_ID AS PRODUCT_ID,
	        POST_CONTENT DETAIL_DESCRIPTION
	    FROM POSTS 
	    WHERE POST_ID = 42
	</select> -->
	
	<insert id="insertQnAByUser" parameterType="java.util.Map">
		INSERT INTO PRODUCT_QNA (PRODUCT_ID, MEMBER_ID, QNA_TITLE, QNA_CONTENT)
			VALUES ( #{productId}, #{memberId}, #{qnaTitle}, #{qnaContent} )
	</insert>
	
	<update id="updateProductQnAByUser" parameterType="java.util.Map">
		UPDATE PRODUCT_QNA
			SET QNA_TITLE = #{title}, QNA_CONTENT = #{content}
			WHERE 1=1
				AND PRODUCT_QNA_ID = #{qnaId}
	</update>
	
	<delete id="deleteQnAByUser" parameterType="java.util.Map">
		DELETE FROM PRODUCT_QNA
			WHERE 1=1
				AND PRODUCT_QNA_ID = #{qnaId};
	</delete>

	
	



</mapper>