<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="admin.mapper.OrderMapper">

	<select id="selectOrderDetailListByAdmin" parameterType="map" resultType="map">
		# 주문내역 조회 쿼리
		
	    SELECT 
	           O.ORDER_ID                                             -- 오더ID
	         , O.ORDER_NUMBER                                         -- 주문번호
	         , CASE					                                  -- 주문한 사람(NULL이면 '비회원'으로 조회되게)
	             WHEN M.USER_NAME
	             IS NULL THEN '비회원'
	             ELSE M.USER_NAME
	           END AS USER_NAME
	         , O.TOTAL_AMOUNT                                         -- 총가격
	         , O.DISCOUNT_AMOUNT                                      -- 할인가격
	         , O.FINAL_AMOUNT                                         -- 최종가격
	         , O.ORDER_COMMENT                                        -- 주문상태
	         , P.PAYMENT_STATUS                                       -- 결제상태(입금시)
	         , DATE_FORMAT(O.ORDER_DT, '%Y-%m-%d') AS ORDER_DT        -- 주문일
	         , CASE
	             WHEN S.SHIPMENT_STATUS
	             IS NULL THEN '발송대기'
	             ELSE S.SHIPMENT_STATUS
	           END AS SHIPMENT_STATUS                                 -- 배송상태 (NULL이면 '발송대기'로 조회되게)
	         , C.COUPON_TYPE                                          -- 어떤쿠폰인지
	         , PS.PROMOTION_NAME                                      -- 어떤프로모션인지
	         , PT.POINT                                               -- 사용 포인트
	    FROM ORDERS O
	    LEFT JOIN PAYMENTS P ON O.ORDER_ID = P.ORDER_ID                               -- 결제 테이블
	    LEFT JOIN SHIPS S ON O.ORDER_ID = S.ORDER_ID                                  -- 배송 테이블
	    LEFT JOIN MEMBERS M ON O.PHONE_NUMBER = M.PHONE_NUMBER                        -- 맴버 테이블(폰번호로 조회)
	    LEFT JOIN PROMOTION_LOG PL ON O.ORDER_ID = PL.ORDER_ID                        -- 프로모션_로그 테이블
	    LEFT JOIN PROMOTIONS PS ON PL.PROMOTION_ID = PS.PROMOTION_ID                  -- 프로모션 테이블
	    LEFT JOIN COUPONS C ON O.ORDER_ID = C.ORDER_ID                                -- 쿠폰 테이블
	    LEFT JOIN POINTS PT ON O.ORDER_ID = PT.ORDER_ID AND PT.CHANGE_TYPE = '사용'    -- 포인트 테이블
	    WHERE 1=1
	    <if test="START_DATE != null and START_DATE != ''">
	        AND O.ORDER_DT <![CDATA[ >= ]]> #{START_DATE}
	    </if>
	    <if test="END_DATE != null and END_DATE != ''">
	        AND O.ORDER_DT <![CDATA[ <= ]]> #{END_DATE}
	    </if>
	    <if test="USER_NAME != null and USER_NAME != ''">
	        AND (M.USER_NAME LIKE CONCAT('%', #{USER_NAME}, '%')
	             OR (#{USER_NAME} = '비회원' AND M.USER_NAME IS NULL))
	    </if>
	    <if test="SHIPMENT_STATUS != null and SHIPMENT_STATUS != '' and SHIPMENT_STATUS != '전체'">
	        AND (
	            (S.SHIPMENT_STATUS IS NULL AND '발송대기' = #{SHIPMENT_STATUS})
	            OR S.SHIPMENT_STATUS = #{SHIPMENT_STATUS}
	        )
	    </if>
	    <if test="PAYMENT_STATUS != null and PAYMENT_STATUS != '' and PAYMENT_STATUS != '전체'">
	        AND P.PAYMENT_STATUS = #{PAYMENT_STATUS}
	    </if>
	</select>
	
	
	<select id="selectPaymentListByAdmin" parameterType="map" resultType="map">
	    # 결제내역 조회
	    
		SELECT P.PAYMENT_ID                                          -- 결제 ID
			 , '0' AS CHK                                            -- 넥사 체크박스 설정을 위한 CHK
		     , P.ORDER_ID                                            -- 주문 ID
		     , P.PAYMENT_METHOD                                      -- 결제 방법
		     , P.PAYMENT_AMOUNT                                      -- 결제 금액
		     , P.PAYMENT_STATUS                                      -- 결제 상태
		     , DATE_FORMAT(P.PAYMENT_DT, '%Y-%m-%d') AS PAYMENT_DT   -- 결제 일자
		     , P.UPDATE_DT                                           -- 수정 일자
		     , O.USER_NAME                                           -- 주문자
		     , O.PHONE_NUMBER                                        -- 연락처
		  FROM PAYMENTS P                                -- 결제테이블
		  LEFT JOIN ORDERS O ON P.ORDER_ID = O.ORDER_ID  -- 주문테이블
		 WHERE 1=1
	    <if test="PAYMENT_STATUS != null and PAYMENT_STATUS != '' and PAYMENT_STATUS != '전체'">
	       AND P.PAYMENT_STATUS = #{PAYMENT_STATUS}
	    </if>
	    <if test="PAYMENT_METHOD != null and PAYMENT_METHOD != '' and PAYMENT_METHOD != '전체'">
	       AND P.PAYMENT_METHOD = #{PAYMENT_METHOD}
	    </if>
	    <if test="USER_NAME != null and USER_NAME !=''">
	       AND O.USER_NAME LIKE CONCAT ('%', #{USER_NAME},'%')
	    </if>
	    <if test="PHONE_NUMBER != null and PHONE_NUMBER !=''">
	       AND O.PHONE_NUMBER LIKE CONCAT ('%', #{PHONE_NUMBER},'%')
	    </if>
	    
	</select>


	<update id="updatePaymentListByAdmin" parameterType="map">
	     # 결제 상태 업데이트
	     
		 UPDATE PAYMENTS                                   -- 결제테이블
            SET PAYMENT_STATUS = #{PAYMENT_STATUS}         -- 결제 상황 업데이트
          WHERE PAYMENT_ID = #{PAYMENT_ID}	               -- 결제ID로 조회
	</update>
	
	
	<select id="selectShipListByAdmin" parameterType="map" resultType="map">
        # 배송 조회 (ORDERS 기준, SHIPS LEFT JOIN)
        
	    SELECT 
	           O.ORDER_ID                                       -- 주문 ID
	         , O.ORDER_DT                                       -- 주문 일자
	         , O.PHONE_NUMBER                                   -- 연락처
	         , CONCAT                                           -- 주소
	             (O.SHIPPING_ADDR_1, ' ',
	             IFNULL(O.SHIPPING_ADDR_2,''))
	           AS ADDRESS  
	         , IFNULL(S.SHIPMENT_ID, '') AS SHIPMENT_ID         -- 배송 ID (NULL이면 공백)
	         , '0' AS CHK                                       -- 넥사 체크박스 설정용
	         , C.COURIER_NAME                                   -- 택배 회사
	         , C.COURIER_ID
	         , S.TRACKING_NUMBER                                -- 송장 번호
	         , CASE 
	             WHEN S.SHIPMENT_STATUS
	             IS NULL THEN '발송대기'
	             ELSE S.SHIPMENT_STATUS
	           END AS SHIPMENT_STATUS                           -- 배송 상태 (NULL이면 '발송대기'로 조회되게)
	         , O.USER_NAME                                      -- 주문자
	         , S.SHIPPED_DT                                     -- 발송 일자
	         , S.DELIVERD_DT                                    -- 배송 완료 일자
	         , S.UPDATE_DT                                      -- 수정 일자
	         , CONCAT(
				  MIN(CONCAT(I.PRODUCT_NAME,' ',                
				   IFNULL(I.PRODUCT_OPTION,''),'*',
				   I.QUANTITY,'개')),
				  CASE WHEN COUNT(*) > 1
				       THEN CONCAT(' 외 ', COUNT(*)-1, '건')
				       ELSE ''
				  END
				) AS PRODUCT_SHORT                              -- 넥사크로 그리드에 표출될 내용(ex>딸기 1개 외 3건)
             , COUNT(DISTINCT I.ORDER_ITEM_ID) AS ITEM_COUNT    -- 주문한 아이템 갯수(제품의 총 CNT가 아니라 주문된 아이템의 종류의 갯수)
	    FROM ORDERS O
	    LEFT JOIN SHIPS S ON O.ORDER_ID = S.ORDER_ID                  -- 배송테이블
	    LEFT JOIN MEMBERS M ON O.PHONE_NUMBER = M.PHONE_NUMBER        -- 멤버테이블
	    LEFT JOIN ORDER_ITEMS I ON O.ORDER_ID = I.ORDER_ID            -- 주문상품 테이블
	    LEFT JOIN COURIER C ON S.COURIER_ID = C.COURIER_ID            -- 택배사 테이블
	    WHERE 1=1
	    <if test="ORDER_ID != null and ORDER_ID != ''">
	    AND O.ORDER_ID = #{ORDER_ID}
	    </if>
	    <if test="SHIPMENT_STATUS != null and SHIPMENT_STATUS != '' and SHIPMENT_STATUS != '전체'">
        AND (
            (S.SHIPMENT_STATUS IS NULL AND #{SHIPMENT_STATUS} = '발송대기')
            OR S.SHIPMENT_STATUS = #{SHIPMENT_STATUS}
        )
    	</if>
    	<if test="USER_NAME != null and USER_NAME != ''">
        AND (O.USER_NAME LIKE CONCAT('%', #{USER_NAME}, '%')
             OR (#{USER_NAME} = '비회원' AND O.USER_NAME IS NULL))
    	</if>
    	<if test="PHONE_NUMBER != null and PHONE_NUMBER != ''">
        AND O.PHONE_NUMBER LIKE CONCAT('%', #{PHONE_NUMBER}, '%') 
    	</if>
    	GROUP BY O.ORDER_ID
	</select>
	
	<update id="updateShipListByAdmin" parameterType="map">
	     # 배송 상태 업데이트
	     
		 UPDATE SHIPS                                        -- 배송 테이블
            SET SHIPMENT_STATUS = #{SHIPMENT_STATUS}         -- 배송 상황 업데이트
              , TRACKING_NUMBER = #{TRACKING_NUMBER}         -- 송장번호 등록
              , UPDATE_DT = NOW()                            -- 업데이트 일시
          WHERE SHIPMENT_ID = #{SHIPMENT_ID}	             -- 배송 ID로 조회
	</update>
	
	<insert id="insertShipListByAdmin" parameterType="map">
		# 배송 인서트문
		
		INSERT INTO SHIPS                                    
		(ORDER_ID, COURIER_ID, TRACKING_NUMBER, SHIPMENT_STATUS, UPDATE_DT)
		VALUES
		(#{ORDER_ID}, #{COURIER_ID}, #{TRACKING_NUMBER} , #{SHIPMENT_STATUS}, NOW())
	</insert>
	
	
	<select id="selectOrderItemByAdmin" parameterType="map" resultType="map">
	#오더 아이디묶음 아이템
		SELECT ORDER_ID                  -- 주문 ID
			 , PRODUCT_ID                -- 제품 ID
		     , PRODUCT_NAME              -- 제품 이름
		     , QUANTITY                  -- 주문 수량
		     , PRODUCT_OPTION            -- 제품 옵션
		     , PRICE                     -- 제품 가격
		     , SUB_TOTAL                 -- 결제 상태
		  FROM ORDER_ITEMS
		 WHERE 1=1
	    <if test="ORDER_ID != null and ORDER_ID != ''">
	       AND ORDER_ID = #{ORDER_ID}
	    </if>
	</select>
	
	<select id="selectPostCarrierByAdmin" parameterType="map" resultType="map">
	#배송비 측정용 조회
		SELECT '0' AS CHK                      -- 넥사 체크박스용
			 , COURIER_ID                      -- 택배사ID
			 , COURIER_NAME                    -- 택배사
			 , SHIP_COST                       -- 택배비
			 , FREE_SHIPPING_PRICE             -- 무배조건
			 , ADDITIONAL_TYPE                 -- 추가사유
			 , ADDITIONAL_PRICE                -- 추가금액
		  FROM COURIER                         -- 택배사테이블
		 WHERE 1=1
		 <if test="COURIER_NAME != null and COURIER_NAME != '' and COURIER_NAME != '전체'">
		   AND COURIER_NAME = #{COURIER_NAME}
		 </if>
		 
	</select>
	
	<select id="selectPostCateByAdmin" parameterType="map" resultType="map">
	#택배사 셀렉트박스용
		SELECT 0 AS COURIER_ID
		    , '전체' AS COURIER_NAME
		UNION ALL
		SELECT
				COURIER_ID
		     ,  COURIER_NAME
		  FROM COURIER
		 WHERE 1=1
	</select>
	
	<update id="updatePostPriceListByAdmin" parameterType="map">
	# 결제 상태 업데이트
	     
		 UPDATE COURIER                                       -- 결제테이블
            SET SHIP_COST           = #{SHIP_COST}            -- 결제 상황 업데이트
              , FREE_SHIPPING_PRICE = #{FREE_SHIPPING_PRICE}  -- 무배최소금액
              , ADDITIONAL_TYPE     = #{ADDITIONAL_TYPE}      -- 추가사유
              , ADDITIONAL_PRICE    = #{ADDITIONAL_PRICE}     -- 추가금
          WHERE COURIER_ID          = #{COURIER_ID}	          -- 결제ID로 조회
	</update>
	
	<update id="updateOrderCommentByAdmin" parameterType="map">
	    # 배송 상태 업데이트 OR 인서트시 실행될 쿼리문
	    
	    UPDATE ORDERS 
	       SET ORDER_COMMENT = CASE
	                            WHEN #{SHIPMENT_STATUS} = '발송완료' 
	                            THEN '배송중'
	                            ELSE '결제완료'
	                           END
	         , UPDATE_DT = NOW()
	     WHERE ORDER_ID  = #{ORDER_ID}
	</update>
	<select id="getSalesStatistics" parameterType="map" resultType="map">
	    <choose>
	        <!-- 일별 통계 -->
	        <when test="SEARCH_TYPE == 'daily'">
	            SELECT 
	                DATE_FORMAT(ORDER_DT, '%Y-%m-%d') as CHART_LABEL,
	                SUM(FINAL_AMOUNT) as TOTAL_AMOUNT,
	                COUNT(*) as ORDER_COUNT,
	                'daily' as CHART_TYPE
	            FROM ORDERS
	            WHERE DATE_FORMAT(ORDER_DT, '%Y-%m-%d') BETWEEN #{START_DATE} AND #{END_DATE}
	            GROUP BY DATE_FORMAT(ORDER_DT, '%Y-%m-%d')
	            ORDER BY CHART_LABEL
	        </when>
	        
	        <!-- 월별 통계 -->
	        <when test="SEARCH_TYPE == 'monthly'">
	            SELECT 
	                DATE_FORMAT(ORDER_DT, '%Y-%m') as CHART_LABEL,
	                SUM(FINAL_AMOUNT) as TOTAL_AMOUNT,
	                COUNT(*) as ORDER_COUNT,
	                'monthly' as CHART_TYPE
	            FROM ORDERS
	            WHERE DATE_FORMAT(ORDER_DT, '%Y-%m') BETWEEN #{START_MONTH} AND #{END_MONTH}
	            GROUP BY DATE_FORMAT(ORDER_DT, '%Y-%m')
	            ORDER BY CHART_LABEL
	        </when>
	        
	        <!-- 결제방법별 통계 -->
	        <when test="SEARCH_TYPE == 'payment'">
	            SELECT 
	                PAYMENT_METHOD as CHART_LABEL,
	                SUM(FINAL_AMOUNT) as TOTAL_AMOUNT,
	                COUNT(*) as ORDER_COUNT,
	                'payment' as CHART_TYPE
	            FROM ORDERS
	            WHERE ORDER_DT BETWEEN #{START_DATE} AND #{END_DATE}
	            GROUP BY PAYMENT_METHOD
	            ORDER BY TOTAL_AMOUNT DESC
	        </when>
	    </choose>
	</select>
</mapper>