<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="admin.mapper.ProductMapper">

	<!-- ___________상품관리___________ -->
	<!-- 상품 목록 조회 - 파라미터: Map (ds_searchCond) - 빈값/전체값은 Controller에서 대부분 제거 
		→ 여기선 값이 있을 때만 WHERE 추가 -->
	<select id="selectProductListByAdmin"
		parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			p.PRODUCT_ID
			,p.PRODUCT_CODE
			,p.PRODUCT_NAME
			,p.PRODUCT_CONTENT
			,p.COST_PRICE
			,p.PRODUCT_PRICE
			,o.OPTION_ID
			,o.OPTION_NAME
			,o.OPTION_VALUE
			,o.ADDITIONAL_PRICE
			,CASE
		WHEN p.SALED_PRICE IS NULL
		THEN
			(p.PRODUCT_PRICE +
		IFNULL(o.ADDITIONAL_PRICE,0))
		ELSE p.SALED_PRICE
		END
		AS TOTAL_PRICE
			,mc.MAIN_CATE_NM
			,sc.SUB_CATE_NM
			,p.IS_VISIBLE
			,IFNULL(i.QUANTITY, 0) AS QUANTITY
			,i.OPTION_ID AS INV_OPTION_ID
			,p.INPUT_DT
			,p.UPDATE_DT
		FROM PRODUCTS p
		JOIN SUB_CATEGORIES sc
		ON p.SUB_CATE_ID = sc.SUB_CATE_ID
		JOIN MAIN_CATEGORIES mc
		ON sc.MAIN_CATE_ID = mc.MAIN_CATE_ID

		LEFT JOIN OPTIONS o
		ON p.PRODUCT_ID = o.PRODUCT_ID

		LEFT JOIN INVENTORIES i
		ON p.PRODUCT_ID = i.PRODUCT_ID
		AND (o.OPTION_ID = i.OPTION_ID OR (o.OPTION_ID IS NULL AND i.OPTION_ID IS
		NULL))
		WHERE 1=1
		<!-- 검색어 -->
		<if
			test="SEARCH_TYPE != null and SEARCH_TEXT != null and SEARCH_TEXT != ''">
			<choose>
				<when test="SEARCH_TYPE == 'PRODUCT_CODE'">
					AND p.PRODUCT_CODE LIKE CONCAT('%', #{SEARCH_TEXT},
					'%')
				</when>
				<when test="SEARCH_TYPE == 'PRODUCT_NAME'">
					AND p.PRODUCT_NAME LIKE CONCAT('%', #{SEARCH_TEXT},
					'%')
				</when>
			</choose>
		</if>

		<!-- 진열상태 (Controller에서 'all'은 제거함) -->
		<if test="IS_VISIBLE != null and IS_VISIBLE != ''">
			AND p.IS_VISIBLE = #{IS_VISIBLE}
		</if>

		<!-- 판매상태 (Controller에서 'allS'는 제거함) -->
		<if test="QUANTITY_STATUS != null and QUANTITY_STATUS != ''">
			<choose>
				<when test="QUANTITY_STATUS == 'sale'">
					AND IFNULL(i.QUANTITY, 0) <![CDATA[>]]>
					0
				</when>
				<when test="QUANTITY_STATUS == 'nosale'">
					AND IFNULL(i.QUANTITY, 0) = 0
				</when>
			</choose>
		</if>

		<!-- 등록일/수정일 (둘 중 입력된 값 기준으로 필터) -->
		<if test="START_DATE != null and START_DATE != ''">
			AND DATE(COALESCE(p.UPDATE_DT, p.INPUT_DT)) <![CDATA[>]]>=
			#{START_DATE}
		</if>
		<if test="END_DATE != null and END_DATE != ''">
			AND DATE(COALESCE(p.UPDATE_DT, p.INPUT_DT)) <![CDATA[<]]>=
			#{END_DATE}
		</if>

		<!-- 카테고리 -->
		<if test="MAIN_CATE_ID != null and MAIN_CATE_ID != ''">
			AND mc.MAIN_CATE_ID = #{MAIN_CATE_ID}
		</if>
		<if test="SUB_CATE_ID != null and SUB_CATE_ID != ''">
			AND sc.SUB_CATE_ID = #{SUB_CATE_ID}
		</if>

		ORDER BY p.PRODUCT_ID, o.OPTION_ID
	</select>

	<!-- 대분류 콤보 -->
	<select id="selectMainCategoryComboByAdmin"
		resultType="java.util.Map">
		SELECT MAIN_CATE_ID
		, MAIN_CATE_NM
		FROM MAIN_CATEGORIES
		ORDER BY MAIN_CATE_NM
	</select>

	<!-- 중분류 콤보 - Service에서 int 하나로 호출하므로 parameterType="int" - int/단일파라미터는 
		#{_parameter} 로 참조 -->
	<select id="selectSubCategoryComboByAdmin" parameterType="int"
		resultType="java.util.Map">
		SELECT SUB_CATE_ID, SUB_CATE_NM
		FROM SUB_CATEGORIES
		WHERE
		MAIN_CATE_ID = #{_parameter}
		ORDER BY SUB_CATE_NM
	</select>

	<!-- 진열 여부  -->
	<update id="updateProductVisibleByAdmin"
		parameterType="java.util.Map">
		UPDATE PRODUCTS
		SET IS_VISIBLE = #{IS_VISIBLE},
		UPDATE_DT
		= NOW()
		WHERE PRODUCT_ID = #{PRODUCT_ID}
	</update>

	<!-- 재고수량 -->
	<update id="updateInventory" parameterType="java.util.Map">
    UPDATE INVENTORIES
       SET QUANTITY = #{QUANTITY},
           UPDATE_DT = NOW(),
           INPUT_ID = #{INPUT_ID},
           UPDATE_ID = #{UPDATE_ID}
     WHERE PRODUCT_ID = #{PRODUCT_ID}
       AND ( (OPTION_ID IS NULL AND #{OPTION_ID} IS NULL)
          OR (OPTION_ID = #{OPTION_ID}) )
	</update>
		



	<!-- ___________재고 입출고 리스트___________  -->
	<!-- 재고/입출고 리스트  -->
	<select id="selectStockMovementsListByAdmin"
			parameterType="java.util.Map" resultType="java.util.Map">
	SELECT	p.PRODUCT_CODE,
			p.PRODUCT_NAME,
			SUM(i.QUANTITY) OVER (PARTITION BY p.PRODUCT_ID) AS TOTAL_QUANTITY,
			mc.MAIN_CATE_NM,
			sc.SUB_CATE_NM,
			o.OPTION_NAME,
			o.OPTION_VALUE,
			o.IS_VISIBLE,
			i.QUANTITY AS CURRENT_QUANTITY,
			sm.MOVE_QUANTITY,
			sm.MOVE_TYPE,
			sm.INPUT_DT,
			o.INPUT_ID,
			o.UPDATE_ID 
	  FROM
			PRODUCTS p
	  JOIN SUB_CATEGORIES sc ON
			p.SUB_CATE_ID = sc.SUB_CATE_ID
	  JOIN MAIN_CATEGORIES mc ON
			sc.MAIN_CATE_ID = mc.MAIN_CATE_ID
	  LEFT JOIN OPTIONS o ON
			p.PRODUCT_ID = o.PRODUCT_ID
	  LEFT JOIN INVENTORIES i ON
			p.PRODUCT_ID = i.PRODUCT_ID
		AND (o.OPTION_ID IS NULL
			OR o.OPTION_ID = i.OPTION_ID)
	  LEFT JOIN STOCK_MOVEMENTS sm ON
			i.INVENTORY_ID = sm.INVENTORY_ID

	WHERE 1=1
		<!-- 검색어 -->
		<if
			test="SEARCH_TYPE != null and SEARCH_TEXT != null and SEARCH_TEXT != ''">
			<choose>
				<when test="SEARCH_TYPE == 'PRODUCT_CODE'">
					AND p.PRODUCT_CODE LIKE CONCAT('%', #{SEARCH_TEXT},	'%')
				</when>
				<when test="SEARCH_TYPE == 'PRODUCT_NAME'">
					AND p.PRODUCT_NAME LIKE CONCAT('%', #{SEARCH_TEXT},	'%')
				</when>
				<when test="SEARCH_TYPE == 'MOVE_TYPE'">
					AND sm.MOVE_TYPE LIKE CONCAT('%', #{SEARCH_TEXT}, '%')
						OR (#{SEARCH_TEXT} = '입고' AND sm.MOVE_TYPE = 'Inbound')
				        OR (#{SEARCH_TEXT} = '출고' AND sm.MOVE_TYPE = 'Outbound')
				        OR (#{SEARCH_TEXT} = '옵션추가' AND sm.MOVE_TYPE = 'Add option')
				</when>
			</choose>
		</if>

		<!-- 진열상태 (Controller에서 'all'은 제거함) -->
		<if test="IS_VISIBLE != null and IS_VISIBLE != ''">
			AND o.IS_VISIBLE = #{IS_VISIBLE}
		</if>

		<!-- 판매상태 (Controller에서 'allS'는 제거함) -->
		<if test="QUANTITY_STATUS != null and QUANTITY_STATUS != ''">
			<choose>
				<when test="QUANTITY_STATUS == 'sale'">
					AND IFNULL(i.QUANTITY, 0) <![CDATA[>]]> 0
				</when>
				<when test="QUANTITY_STATUS == 'nosale'">
					AND IFNULL(i.QUANTITY, 0) = 0
				</when>
			</choose>
		</if>

		<!-- 등록일/수정일 (둘 중 입력된 값 기준으로 필터) -->
		<if test="START_DATE != null and START_DATE != ''">
			AND DATE(sm.INPUT_DT) <![CDATA[>]]>= #{START_DATE}
		</if>
		<if test="END_DATE != null and END_DATE != ''">
			AND DATE(sm.INPUT_DT) <![CDATA[<]]>= #{END_DATE}
		</if>

		<!-- 카테고리 -->
		<if test="MAIN_CATE_ID != null and MAIN_CATE_ID != ''">
			AND mc.MAIN_CATE_ID = #{MAIN_CATE_ID}
		</if>
		<if test="SUB_CATE_ID != null and SUB_CATE_ID != ''">
			AND sc.SUB_CATE_ID = #{SUB_CATE_ID}
		</if>
	ORDER BY
		p.PRODUCT_ID,
		o.OPTION_ID,
		sm.INPUT_DT DESC

		
	</select>
	
	










	<!-- ___________카테고리 관리___________ -->
	<!-- 대분류 -->
	<select id="selectMainCategoryByAdmin"
		resultType="java.util.Map">
		SELECT MAIN_CATE_ID, MAIN_CATE_NM, SORT_NUMBER, IS_ACTIVE
		FROM MAIN_CATEGORIES
		ORDER BY SORT_NUMBER
	</select>

	<!-- 중분류 -->
	<select id="selectSubCategoryByAdmin" resultType="java.util.Map">
		SELECT
		SUB_CATE_ID, MAIN_CATE_ID, SUB_CATE_NM, SORT_NUMBER, IS_ACTIVE
		FROM
		SUB_CATEGORIES
		ORDER BY MAIN_CATE_ID, SORT_NUMBER
	</select>

	<insert id="insertCategoryByAdmin" parameterType="java.util.Map">
		<choose>
			<when test="TYPE == 'main'">
				INSERT INTO MAIN_CATEGORIES
				(MAIN_CATE_NM,
				SORT_NUMBER, IS_ACTIVE, INPUT_ID, INPUT_DT)
				VALUES
				(#{MAIN_CATE_NM},
				#{SORT_NUMBER}, #{IS_ACTIVE}, #{INPUT_ID}, NOW())
			</when>
			<otherwise>
				INSERT INTO SUB_CATEGORIES
				(MAIN_CATE_ID, SUB_CATE_NM,
				SORT_NUMBER, IS_ACTIVE, INPUT_ID, INPUT_DT)
				VALUES
				(#{MAIN_CATE_ID},
				#{SUB_CATE_NM}, #{SORT_NUMBER}, #{IS_ACTIVE}, #{INPUT_ID}, NOW())
			</otherwise>
		</choose>
	</insert>

	<update id="updateCategoryByAdmin" parameterType="java.util.Map">
		<choose>
			<when test="TYPE == 'main'">
				UPDATE MAIN_CATEGORIES
				SET MAIN_CATE_NM =
				#{MAIN_CATE_NM},
				SORT_NUMBER = #{SORT_NUMBER},
				IS_ACTIVE =
				#{IS_ACTIVE},
				UPDATE_ID = #{UPDATE_ID},
				UPDATE_DT = NOW()
				WHERE
				MAIN_CATE_ID = #{MAIN_CATE_ID}
			</when>
			<otherwise>
				UPDATE SUB_CATEGORIES
				SET SUB_CATE_NM = #{SUB_CATE_NM},
				SORT_NUMBER = #{SORT_NUMBER},
				IS_ACTIVE = #{IS_ACTIVE},
				UPDATE_ID =
				#{UPDATE_ID},
				UPDATE_DT = NOW()
				WHERE SUB_CATE_ID = #{SUB_CATE_ID}
			</otherwise>
		</choose>
	</update>

	<delete id="deleteCategoryByAdmin" parameterType="java.util.Map">
		<choose>
			<when test="TYPE == 'main'">
				DELETE FROM MAIN_CATEGORIES WHERE
				MAIN_CATE_ID=#{MAIN_CATE_ID}
			</when>
			<otherwise>
				DELETE FROM SUB_CATEGORIES WHERE
				SUB_CATE_ID=#{SUB_CATE_ID}
			</otherwise>
		</choose>
	</delete>







	<!-- ___________옵션 관리___________ -->
	<!-- 옵션 조회,검색 -->
	<select id="selectOptionByAdmin" parameterType="java.util.Map"
		resultType="java.util.Map" flushCache="true">
		SELECT
		o.OPTION_ID,
		o.OPTION_NAME,
		o.OPTION_VALUE,
		p.PRODUCT_NAME,
		o.ADDITIONAL_PRICE,
		o.IS_VISIBLE,
		o.INPUT_DT
		FROM OPTIONS o
		LEFT JOIN PRODUCTS p ON o.PRODUCT_ID = p.PRODUCT_ID
		WHERE 1=1
		<!-- 검색어 처리 -->
		<if
			test="SEARCH_TYPE != null and SEARCH_TEXT != null and SEARCH_TEXT != ''">
			<choose>
				<when test="SEARCH_TYPE == 'OPTION_ID'">
					AND o.OPTION_ID = #{SEARCH_TEXT}
				</when>
				<when test="SEARCH_TYPE == 'OPTION_NAME'">
					AND o.OPTION_NAME LIKE CONCAT('%', #{SEARCH_TEXT},
					'%')
				</when>
				<when test="SEARCH_TYPE == 'OPTION_VALUE'">
					AND o.OPTION_VALUE LIKE CONCAT('%', #{SEARCH_TEXT},
					'%')
				</when>
				<when test="SEARCH_TYPE == 'PRODUCT_NAME'">
					AND p.PRODUCT_NAME LIKE CONCAT('%', #{SEARCH_TEXT},
					'%')
				</when>
			</choose>
		</if>
		ORDER BY o.OPTION_ID
	</select>

	<!-- 옵션 진열여부 -->
	<update id="updateOptionVisibleByAdmin"
		parameterType="java.util.Map">
		UPDATE OPTIONS
		SET IS_VISIBLE = #{IS_VISIBLE},
		UPDATE_DT =
		NOW()
		WHERE OPTION_ID = #{OPTION_ID}
	</update>

	<!-- 옵션 단건 조회 -->
	<select id="selectOptionOneByAdmin" parameterType="long"
		resultType="java.util.Map" flushCache="true">
		SELECT PRODUCT_ID
		, OPTION_ID
		, OPTION_NAME
		, OPTION_VALUE
		, ADDITIONAL_PRICE
		, IS_VISIBLE
		, INPUT_ID
		, INPUT_DT
		, UPDATE_ID
		, UPDATE_DT
		FROM OPTIONS
		WHERE OPTION_ID = #{OPTION_ID}
	</select>

	<!-- 옵션 등록 -->
	<insert id="insertOption" parameterType="java.util.Map">
		INSERT INTO OPTIONS
		(PRODUCT_ID, OPTION_NAME, OPTION_VALUE, ADDITIONAL_PRICE, INPUT_DT,
		INPUT_ID, UPDATE_DT, UPDATE_ID)
		VALUES
		(#{PRODUCT_ID}, #{OPTION_NAME}, #{OPTION_VALUE}, #{ADDITIONAL_PRICE}, NOW(),
		#{INPUT_ID}, NOW(), #{INPUT_ID})
	</insert>


	<!-- 옵션 수정 -->
	<update id="updateOption" parameterType="java.util.Map">
		UPDATE OPTIONS
		SET PRODUCT_ID = #{PRODUCT_ID}
		,OPTION_NAME = #{OPTION_NAME}
		,OPTION_VALUE = #{OPTION_VALUE}
		,ADDITIONAL_PRICE = #{ADDITIONAL_PRICE}
		,UPDATE_DT = NOW()
		,UPDATE_ID = #{UPDATE_ID}
		WHERE OPTION_ID = #{OPTION_ID}
	</update>


	<!-- 옵션 등록시 필요한 상품 조회 -->
	<select id="selectProductListOptionByAdmin"
		parameterType="java.util.Map" resultType="java.util.Map">
		SELECT PRODUCT_ID, PRODUCT_NAME
		FROM PRODUCTS
		WHERE 1=1
		<if test="SEARCH_TEXT != null and SEARCH_TEXT != ''">
			AND PRODUCT_NAME LIKE CONCAT('%', #{SEARCH_TEXT}, '%')
		</if>
		ORDER BY PRODUCT_NAME
	</select>






</mapper>
