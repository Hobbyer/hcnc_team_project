<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="Form_ProductCate" width="1280" height="800" titletext="카테고리관리" onload="Form_ProductCate_onload">
    <Layouts>
      <Layout width="1280" height="800">
        <!-- 상단 메뉴 버튼 -->
        <Button id="btn_goProduct" text="상품목록" left="10" top="10" width="100" height="35" onclick="btn_goProduct_onclick" background="#b3e5ff" color="#000000" font="bold 10pt 'Gulim'" borderRadius="8px" border="1px solid #90caf9"/>
        <Button id="btn_goDisplay" text="상품진열" left="120" top="10" width="100" height="35" onclick="btn_goDisplay_onclick" background="#b3e5ff" color="#000000" font="bold 10pt 'Gulim'" borderRadius="8px" border="1px solid #90caf9"/>
        <Button id="btn_goProductReg" text="상품등록" left="230" top="10" width="100" height="35" onclick="btn_goProductReg_onclick" background="#b3e5ff" color="#000000" font="bold 10pt 'Gulim'" borderRadius="8px" border="1px solid #90caf9"/>
        <!-- 좌측: 카테고리 트리 -->
        <Grid id="grd_category" binddataset="ds_category" left="10" top="60" width="500" height="650" oncellclick="grd_category_oncellclick">
          <Formats>
            <Format id="default">
              <Columns>
                <Column size="30"/>
                <Column size="370"/>
              </Columns>
              <Rows>
                <Row size="28"/>
              </Rows>
              <Band id="body">
                <!-- + / - 기호 -->
                <Cell col="0" text="expr:(type=='main' ? (expanded=='Y' ? '-' : '+') : '')" textAlign="center"/>
                <!-- 카테고리명 (level 들여쓰기 적용) -->
                <Cell col="1" text="expr:(level==0 ? cate_name : '   ' + cate_name)"/>
              </Band>
            </Format>
          </Formats>
        </Grid>
        <!-- 우측: 상세 정보 -->
        <Div id="div_detail" left="530" top="60" width="730" height="650" background="#ffffff" border="1px solid #90caf9" borderRadius="12px" padding="15px">
          <Layouts>
            <Layout>
              <Static id="sta_title" text="상세정보" left="20" top="20" font="bold 14pt 'Gulim'" color="#000000"/>
              <Static id="sta_current" text="ID" left="20" top="60" width="100" height="25" font="10pt 'Gulim'" color="#000000"/>
              <Static id="sta_idValue" text="자동생성" left="140" top="60" width="200" height="25" font="10pt 'Gulim'" color="#666666"/>
              <Static id="sta_name" text="분류명" left="20" top="100" width="100" height="25" font="10pt 'Gulim'" color="#000000"/>
              <Edit id="edt_cateName" left="140" top="100" width="400" height="25" border="1px solid #90caf9" borderRadius="6px"/>
              <Static id="sta_sort" text="정렬순번" left="20" top="140" width="100" height="25" font="10pt 'Gulim'" color="#000000"/>
              <Edit id="edt_sort" left="140" top="140" width="100" height="25" border="1px solid #90caf9" borderRadius="6px"/>
              <Static id="sta_display" text="진열상태" left="20" top="180" width="100" height="25" font="10pt 'Gulim'" color="#000000"/>
              <Radio id="rdo_display" taborder="10" left="140" top="175" width="359" height="35" index="0" value="Y" innerdataset="innerdataset" codecolumn="codecolumn" datacolumn="datacolumn" direction="vertical" text="진열함" font="10pt 'Gulim'" color="#000000">
                <Dataset id="innerdataset">
                  <ColumnInfo>
                    <Column id="codecolumn" size="256"/>
                    <Column id="datacolumn" size="256"/>
                  </ColumnInfo>
                  <Rows>
                    <Row>
                      <Col id="codecolumn">Y</Col>
                      <Col id="datacolumn">진열함</Col>
                    </Row>
                    <Row>
                      <Col id="codecolumn">N</Col>
                      <Col id="datacolumn">진열안함</Col>
                    </Row>
                  </Rows>
                </Dataset>
              </Radio>
              <Button id="btn_saveDetail" text="저장" left="140" top="230" width="100" height="30" onclick="btn_saveDetail_onclick" background="#90caf9" color="#ffffff" font="bold 10pt 'Gulim'" borderRadius="8px" border="0px"/>
            </Layout>
          </Layouts>
        </Div>
        <!-- 하단 버튼 영역 -->
        <Button id="btn_addMain" text="대분류추가" left="10" top="730" width="100" height="35" onclick="btn_addMain_onclick" background="#b3e5ff" color="#000000" font="bold 10pt 'Gulim'" borderRadius="8px" border="1px solid #90caf9"/>
        <Button id="btn_addSub" text="하위추가" left="120" top="730" width="100" height="35" onclick="btn_addSub_onclick" background="#b3e5ff" color="#000000" font="bold 10pt 'Gulim'" borderRadius="8px" border="1px solid #90caf9"/>
        <Button id="btn_edit" text="수정" left="230" top="730" width="100" height="35" onclick="btn_edit_onclick" background="#90caf9" color="#ffffff" font="bold 10pt 'Gulim'" borderRadius="8px" border="0px"/>
        <Button id="btn_delete" text="삭제" left="340" top="730" width="100" height="35" onclick="btn_delete_onclick" background="#f44336" color="#ffffff" font="bold 10pt 'Gulim'" borderRadius="8px" border="0px"/>
      </Layout>
    </Layouts>
    <!-- 데이터셋 정의 -->
    <Script type="xscript5.1"><![CDATA[/***************************************************
* onload : 메인/서브 카테고리 조회
***************************************************/
this.Form_ProductCate_onload = function(obj,e)
{
    this.transaction("selectMainCategoryByAdmin", "svc::selectMainCategoryByAdmin.do",
        "", "ds_mainCate=ds_mainCate", "", "fn_callback", true);
    
    this.transaction("selectSubCategoryByAdmin", "svc::selectSubCategoryByAdmin.do",
        "", "ds_subCate=ds_subCate", "", "fn_callback", true);
};

/***************************************************
* 공통 콜백
***************************************************/
/***************************************************
* 공통 콜백
***************************************************/
this.fn_callback = function(svcID, errCode, errMsg)
{
    if (errCode < 0) {
        alert("에러: " + errMsg);
        return;
    }

    // 저장/수정/삭제 성공 후 → 재조회 시작
    if (svcID=="insertCategoryByAdmin" || svcID=="updateCategoryByAdmin" || svcID=="deleteCategoryByAdmin") {
        if (svcID=="insertCategoryByAdmin") {
            if (this._insertMode && this._insertMode.type=="main") {
                this._lastAction = "insertMain";
            } else {
                this._lastAction = "insertSub";
                this._lastMainId = this._insertMode ? this._insertMode.mainId : null;
            }
        }
        else if (svcID=="updateCategoryByAdmin") {
            this._lastAction = "update";
            this._lastCateType = this.ds_in.getColumn(0,"TYPE"); // main/sub 구분 저장
            this._lastCateId   = this.ds_in.getColumn(0, this._lastCateType=="main" ? "MAIN_CATE_ID" : "SUB_CATE_ID");
        }
        else if (svcID=="deleteCategoryByAdmin") {
            this._lastAction = "delete";
            this._lastCateType = this.ds_in.getColumn(0,"TYPE");
            if (this._lastCateType=="sub") {
                this._lastMainId = this.ds_subCate.getColumn(
                    this.ds_subCate.findRow("SUB_CATE_ID", this.ds_in.getColumn(0,"SUB_CATE_ID")),
                    "MAIN_CATE_ID"
                );
            }
        }

        // 공통 재조회 실행
        this.fn_reloadTree();
    }

    // 메인 조회 끝나면 → 서브 조회
    else if (svcID=="selectMainCategoryByAdmin") {
        this.transaction("selectSubCategoryByAdmin", "svc::selectSubCategoryByAdmin.do",
            "", "ds_subCate=ds_subCate", "", "fn_callback", true);
    }

    // 서브 조회 끝나면 최종 처리
    else if (svcID=="selectSubCategoryByAdmin") {
        if (this.ds_mainCate.rowcount > 0 && this.ds_subCate.rowcount > 0) {
            this.fn_makeTree();

            // ✅ 작업별 알림 + 선택 처리
            if (this._lastAction == "insertMain") {
                alert("대분류가 추가되었습니다.");
                var newId = this.ds_mainCate.getColumn(this.ds_mainCate.rowcount-1,"MAIN_CATE_ID");
                var row = this.ds_category.findRow("cate_id","M"+newId);
                if (row >= 0) {
                    this.grd_category.selectRow(row);
                    this.fn_showDetail(row);
                }
            }
            else if (this._lastAction == "insertSub") {
                alert("하위 분류가 추가되었습니다.");
                var newId = this.ds_subCate.getColumn(this.ds_subCate.rowcount-1,"SUB_CATE_ID");
                var mainRow = this.ds_category.findRow("cate_id","M"+this._lastMainId);

                if (mainRow >= 0) {
                    // 부모 대분류 펼치기
                    this.grd_category.selectRow(mainRow);
                    this.grd_category_oncellclick(this.grd_category, {row:mainRow});

                    // 새 하위 분류 선택
                    var subRow = this.ds_category.findRow("cate_id","S"+newId);
                    if (subRow >= 0) {
                        this.grd_category.selectRow(subRow);
                        this.fn_showDetail(subRow);
                    }
                }
            }
            else if (this._lastAction == "update") {
                alert("수정이 완료되었습니다.");
                var prefix = (this._lastCateType=="main" ? "M" : "S");
                var row = this.ds_category.findRow("cate_id", prefix+this._lastCateId);
                if (row >= 0) {
                    this.grd_category.selectRow(row);
                    this.fn_showDetail(row);
                }
            }
            else if (this._lastAction == "delete") {
                alert("삭제가 완료되었습니다.");
                if (this._lastCateType=="sub" && this._lastMainId) {
                    // 부모 대분류 선택 + 펼치기
                    var mainRow = this.ds_category.findRow("cate_id","M"+this._lastMainId);
                    if (mainRow >= 0) {
                        this.grd_category.selectRow(mainRow);
                        this.grd_category_oncellclick(this.grd_category, {row:mainRow});
                    }
                }
            }

            // 우측 입력창 초기화
            this.fn_clearDetail();

            // 상태값 리셋
            this._insertMode = null;
            this._lastAction = null;
            this._lastMainId = null;
            this._lastCateId = null;
            this._lastCateType = null;
        }
    }
};



/***************************************************
* 공통 재조회 함수 : 메인 → 서브 순차 조회
***************************************************/
this.fn_reloadTree = function()
{
    this.transaction("selectMainCategoryByAdmin", "svc::selectMainCategoryByAdmin.do",
        "", "ds_mainCate=ds_mainCate", "", "fn_callback", true);
};


//우측 초기화 함수
this.fn_clearDetail = function()
{
    this.div_detail.form.sta_idValue.set_text("자동생성");
    this.div_detail.form.edt_cateName.set_value("");
    this.div_detail.form.edt_sort.set_value("");
    this.div_detail.form.rdo_display.set_value("Y");  // 기본 진열함
};



/***************************************************
* 트리 데이터 구성 (처음에는 대분류만)
***************************************************/
this.fn_makeTree = function()
{
    var dsTree = this.ds_category;
    dsTree.clearData();
    
    for (var i=0; i<this.ds_mainCate.getRowCount(); i++) {
        var mid = String(this.ds_mainCate.getColumn(i,"MAIN_CATE_ID"));
        var r = dsTree.addRow();
        dsTree.setColumn(r,"cate_id","M"+mid);
        dsTree.setColumn(r,"parent_id","");
        dsTree.setColumn(r,"cate_name",this.ds_mainCate.getColumn(i,"MAIN_CATE_NM"));
        dsTree.setColumn(r,"level",0);
        dsTree.setColumn(r,"type","main");
        dsTree.setColumn(r,"expanded","N");
    }
};

/***************************************************
* 그리드 클릭 (대분류: sub 삽입 / 중분류: 상세표시)
***************************************************/
this.grd_category_oncellclick = function(obj,e)
{
    var row = e.row;
    if (row < 0) return;
    
    var type   = this.ds_category.getColumn(row,"type");
    var cateId = this.ds_category.getColumn(row,"cate_id");
    
    // 대분류 클릭
    if (type=="main") {
        var expanded = this.ds_category.getColumn(row,"expanded");
        
        if (expanded=="Y") {
            // 닫기 → 자식 삭제
            this.ds_category.setColumn(row,"expanded","N");
            for (var i=this.ds_category.getRowCount()-1; i>=0; i--) {
                if (this.ds_category.getColumn(i,"parent_id")==cateId) {
                    this.ds_category.deleteRow(i);
                }
            }
        }
        else {
            // 다른 대분류의 sub 전부 삭제
            for (var j=this.ds_category.getRowCount()-1; j>=0; j--) {
                if (this.ds_category.getColumn(j,"type")=="sub") {
                    this.ds_category.deleteRow(j);
                } else {
                    this.ds_category.setColumn(j,"expanded","N");
                }
            }
            
            // 클릭한 대분류 펼치기
            this.ds_category.setColumn(row,"expanded","Y");
            
            // 클릭한 row 바로 밑에 sub 삽입
            var mainId = cateId.replace("M","");
            var insertPos = row;
            for (var k=0; k<this.ds_subCate.getRowCount(); k++) {
                if (String(this.ds_subCate.getColumn(k,"MAIN_CATE_ID"))==mainId) {
                    insertPos++;
                    var r2 = this.ds_category.insertRow(insertPos);
                    this.ds_category.setColumn(r2,"cate_id","S"+this.ds_subCate.getColumn(k,"SUB_CATE_ID"));
                    this.ds_category.setColumn(r2,"parent_id",cateId);
                    this.ds_category.setColumn(r2,"cate_name","   "+this.ds_subCate.getColumn(k,"SUB_CATE_NM"));
                    this.ds_category.setColumn(r2,"level",1);
                    this.ds_category.setColumn(r2,"type","sub");
                    this.ds_category.setColumn(r2,"expanded","N");
                }
            }

            // 클릭한 대분류 선택 유지
            this.ds_category.set_rowposition(row);
        }
        
        this.fn_showDetail(row);
        
    }
    else {
        // 중분류 클릭 → 상세표시
        this.fn_showDetail(row);
    }
};

/***************************************************
* 상세정보 표시
***************************************************/
this.fn_showDetail = function(row)
{
    var id   = this.ds_category.getColumn(row,"cate_id");
    var name = this.ds_category.getColumn(row,"cate_name").trim();
    var type = this.ds_category.getColumn(row,"type");
    
    var active = "Y";
    var sort   = "";

    if (type=="main") {
        var mainId = id.replace("M","");
        var mainRow = this.ds_mainCate.findRow("MAIN_CATE_ID", mainId);
        if (mainRow >= 0) {
            active = this.ds_mainCate.getColumn(mainRow,"IS_ACTIVE");
            sort   = this.ds_mainCate.getColumn(mainRow,"SORT_NUMBER");
        }
    } else {
        var subId = id.replace("S","");
        var subRow = this.ds_subCate.findRow("SUB_CATE_ID", subId);
        if (subRow >= 0) {
            active = this.ds_subCate.getColumn(subRow,"IS_ACTIVE");
            sort   = this.ds_subCate.getColumn(subRow,"SORT_NUMBER");
        }
    }
    
    this.div_detail.form.sta_idValue.set_text(id ? id : "자동생성");
    this.div_detail.form.edt_cateName.set_value(name);
    this.div_detail.form.edt_sort.set_value(sort);
    this.div_detail.form.rdo_display.set_value(active);

    this._insertMode = null;
};

/***************************************************
* 정렬순번 자동 계산 함수
***************************************************/
this.fn_getNextSortNumber = function(type, mainId)
{
    var maxSort = 0;

    if (type=="main") {
        for (var i=0; i<this.ds_mainCate.getRowCount(); i++) {
            var v = this.ds_mainCate.getColumn(i,"SORT_NUMBER");
            if (v && v > maxSort) maxSort = v;
        }
    } else if (type=="sub") {
        for (var j=0; j<this.ds_subCate.getRowCount(); j++) {
            if (String(this.ds_subCate.getColumn(j,"MAIN_CATE_ID")) == String(mainId)) {
                var v2 = this.ds_subCate.getColumn(j,"SORT_NUMBER");
                if (v2 && v2 > maxSort) maxSort = v2;
            }
        }
    }
    return maxSort + 1;
};

/***************************************************
* 대분류 추가 버튼
***************************************************/
this.btn_addMain_onclick = function(obj,e)
{
    this._insertMode = { type:"main" };
    this.div_detail.form.sta_idValue.set_text("자동생성");
    this.div_detail.form.edt_cateName.set_value("");
    this.div_detail.form.edt_sort.set_value(this.fn_getNextSortNumber("main"));
    this.div_detail.form.rdo_display.set_value("Y");

    alert("우측 신규 대분류 정보를 입력 후 [저장]을 누르세요.");
};

/***************************************************
* 하위 분류 추가 버튼
***************************************************/
this.btn_addSub_onclick = function(obj,e)
{
    var row = this.grd_category.currentrow;
    if (row < 0) {
        alert("하위 분류를 추가할 대분류를 선택하세요.");
        return;
    }
    var type = this.ds_category.getColumn(row,"type");
    if (type!="main") {
        alert("대분류를 선택해야 하위 분류를 추가할 수 있습니다.");
        return;
    }

    var mainId = this.ds_category.getColumn(row,"cate_id").replace("M","");

    this._insertMode = { type:"sub", mainId:mainId };
    this.div_detail.form.sta_idValue.set_text("자동생성");
    this.div_detail.form.edt_cateName.set_value("");
    this.div_detail.form.edt_sort.set_value(this.fn_getNextSortNumber("sub", mainId));
    this.div_detail.form.rdo_display.set_value("Y");

    alert("우측 신규 중분류 정보를 입력 후 [저장]을 누르세요.");
};

/***************************************************
* 수정 버튼
***************************************************/
this.btn_edit_onclick = function(obj,e)
{
    var row = this.grd_category.currentrow;
    if (row < 0) {
        alert("수정할 항목을 선택하세요.");
        return;
    }
    this.fn_showDetail(row);
    this._insertMode = null;
    alert("선택한 항목 정보를 우측 화면에서 수정 후 [저장] 버튼을 누르세요.");
};

/***************************************************
* 삭제 버튼
***************************************************/
this.btn_delete_onclick = function(obj,e)
{
    var row = this.grd_category.currentrow;
    if (row < 0) {
        alert("삭제할 항목을 선택하세요.");
        return;
    }
    if (!confirm("정말 삭제하시겠습니까?")) return;

    var type = this.ds_category.getColumn(row,"type");
    var cateId = this.ds_category.getColumn(row,"cate_id").substring(1);

    this.ds_in.clearData();
    var nRow = this.ds_in.addRow();
    this.ds_in.setColumn(nRow,"TYPE", type);
    if (type=="main") this.ds_in.setColumn(nRow,"MAIN_CATE_ID",cateId);
    else this.ds_in.setColumn(nRow,"SUB_CATE_ID",cateId);

    this.transaction("deleteCategoryByAdmin","svc::deleteCategoryByAdmin.do",
        "ds_in=ds_in","","","fn_callback",true);
		
		
	
};

/***************************************************
* 저장 버튼 (신규/수정 통합)
***************************************************/
this.btn_saveDetail_onclick = function(obj,e)
{
    var name    = this.div_detail.form.edt_cateName.value;
    var sort    = this.div_detail.form.edt_sort.value;
    var display = this.div_detail.form.rdo_display.value;

    if (!name) {
        alert("분류명을 입력하세요.");
        return;
    }
    if (!sort) sort = 0;
    if (isNaN(Number(sort))) {
        alert("정렬순번은 숫자만 입력하세요.");
        return;
    }
    sort = parseInt(sort);

    this.ds_in.clearData();
    var nRow = this.ds_in.addRow();

    // 신규
    if (this._insertMode) {
        if (this._insertMode.type=="main") {
            this.ds_in.setColumn(nRow,"TYPE","main");
            this.ds_in.setColumn(nRow,"MAIN_CATE_NM", name);
        } else {
            this.ds_in.setColumn(nRow,"TYPE","sub");
            this.ds_in.setColumn(nRow,"MAIN_CATE_ID", this._insertMode.mainId);
            this.ds_in.setColumn(nRow,"SUB_CATE_NM", name);
        }
        this.ds_in.setColumn(nRow,"SORT_NUMBER", sort);
        this.ds_in.setColumn(nRow,"IS_ACTIVE", display);
        this.ds_in.setColumn(nRow,"INPUT_ID","admin");

        this.transaction("insertCategoryByAdmin","svc::insertCategoryByAdmin.do",
            "ds_in=ds_in","","","fn_callback",true);
    }
    // 수정
    else {
        var row = this.grd_category.currentrow;
        if (row < 0) {
            alert("수정할 항목을 선택하세요.");
            return;
        }
        var id   = this.ds_category.getColumn(row,"cate_id");
        var type = this.ds_category.getColumn(row,"type");
        var cateId = id.substring(1);

        this.ds_in.setColumn(nRow,"TYPE", type);
        if (type=="main") {
            this.ds_in.setColumn(nRow,"MAIN_CATE_ID", cateId);
            this.ds_in.setColumn(nRow,"MAIN_CATE_NM", name);
        } else {
            this.ds_in.setColumn(nRow,"SUB_CATE_ID", cateId);
            this.ds_in.setColumn(nRow,"SUB_CATE_NM", name);
        }
        this.ds_in.setColumn(nRow,"SORT_NUMBER", sort);
        this.ds_in.setColumn(nRow,"IS_ACTIVE", display);
        this.ds_in.setColumn(nRow,"UPDATE_ID","admin");

        this.transaction("updateCategoryByAdmin","svc::updateCategoryByAdmin.do",
            "ds_in=ds_in","","","fn_callback",true);
    }
    // this._insertMode 는 콜백에서 초기화
};



/***************************************************
* 상단 메뉴 버튼 이벤트
***************************************************/
this.btn_goProduct_onclick = function(obj,e)
{
    this.go("product::Form_Product.xfdl");   // 상품목록
};

this.btn_goDisplay_onclick = function(obj,e)
{
    alert("상품진열 페이지는 준비중입니다.");  // 아직 없음
};

this.btn_goProductReg_onclick = function(obj,e)
{
    this.go("product::Form_ProductReg.xfdl");   // 상품등록
};
]]></Script>
    <Objects>
      <Dataset id="ds_mainCate">
        <ColumnInfo>
          <Column id="MAIN_CATE_ID" type="INT"/>
          <Column id="MAIN_CATE_NM" type="STRING"/>
          <Column id="SORT_NUMBER" type="INT"/>
          <Column id="IS_ACTIVE" type="STRING"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_subCate">
        <ColumnInfo>
          <Column id="SUB_CATE_ID" type="INT"/>
          <Column id="MAIN_CATE_ID" type="INT"/>
          <Column id="SUB_CATE_NM" type="STRING"/>
          <Column id="SORT_NUMBER" type="INT"/>
          <Column id="IS_ACTIVE" type="STRING"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_in">
        <ColumnInfo>
          <Column id="TYPE" type="STRING"/>
          <Column id="MAIN_CATE_ID" type="INT"/>
          <Column id="SUB_CATE_ID" type="INT"/>
          <Column id="MAIN_CATE_NM" type="STRING"/>
          <Column id="SUB_CATE_NM" type="STRING"/>
          <Column id="SORT_NUMBER" type="INT"/>
          <Column id="IS_ACTIVE" type="STRING"/>
          <Column id="INPUT_ID" type="STRING"/>
          <Column id="UPDATE_ID" type="STRING"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_category">
        <ColumnInfo>
          <Column id="cate_id" type="string"/>
          <Column id="parent_id" type="string"/>
          <Column id="cate_name" type="string"/>
          <Column id="level" type="int"/>
          <Column id="expanded" type="string"/>
          <Column id="type" type="string"/>
        </ColumnInfo>
      </Dataset>
    </Objects>
  </Form>
</FDL>
