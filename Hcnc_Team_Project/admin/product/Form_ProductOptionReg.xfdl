<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="Form_ProductOptionReg" width="1280" height="800" titletext="옵션 등록/수정" background="#f4f7fe" onload="Form_ProductOptionReg_onload" ontimer="Form_ProductOptionReg_ontimer">
    <Layouts>
      <Layout width="1280" height="800">
        <!-- 타이틀 -->
        <Static id="sta_title" text="옵션 등록/수정" left="30" top="0" width="400" height="40" font="bold 16pt/normal &quot;맑은 고딕&quot;" color="#232323"/>
        <!-- 선택된 상품 -->
        <Static id="sta_prodLabel" text="선택된 상품 :  " left="30" top="60" width="100" height="35" font="bold 10pt/normal &quot;맑은 고딕&quot;" color="#222222" textAlign="right" background="#ffffff" border="1px solid #102b6e" borderRadius="6px"/>
        <Static id="sta_selectedProd" text="상품을 검색하여 선택하세요." left="140" top="60" width="500" height="35" font="bold 11pt 'Arial'" color="#888888" background="#f5f5f5" border="1px solid #cccccc" padding="0px 10px" borderRadius="6px" textAlign="left"/>
        <Button id="btn_searchProd" text="상품검색 🔍" left="660" top="60" width="120" height="35" background="#ffffff" color="#102b6e" font="bold 10pt 'Arial'" borderRadius="6px" border="1px solid #102b6e" cursor="pointer" onclick="btn_searchProd_onclick"/>
        <!-- 옵션 Grid -->
        <Grid id="grd_option" left="30" top="130" width="1220" height="480" binddataset="ds_optionReg" autofittype="col" border="1px solid #ffffff" borderRadius="8px">
          <Formats>
            <Format id="default">
              <Columns>
                <Column size="50"/>
                <Column size="200"/>
                <Column size="200"/>
                <Column size="150"/>
              </Columns>
              <Rows>
                <Row size="40" band="head"/>
                <Row size="36"/>
              </Rows>
              <Band id="head">
                <Cell text="No" background="#ffffff" font="bold 10pt/normal &quot;맑은 고딕&quot;" border="1px solid #ffffff"/>
                <Cell col="1" text="옵션명" background="#ffffff" font="bold 10pt/normal &quot;맑은 고딕&quot;" border="1px solid #ffffff"/>
                <Cell col="2" text="옵션값" background="#ffffff" font="bold 10pt/normal &quot;맑은 고딕&quot;" border="1px solid #ffffff"/>
                <Cell col="3" text="추가금액" background="#ffffff" font="bold 10pt/normal &quot;맑은 고딕&quot;" border="1px solid #ffffff"/>
              </Band>
              <Band id="body">
                <Cell text="expr:currow+1" textAlign="center"/>
                <Cell col="1" text="bind:OPTION_NAME" edittype="text" textAlign="center" textareamaxlength="20" editmaxlength="15"/>
                <Cell col="2" text="bind:OPTION_VALUE" edittype="text" textAlign="center" editmaxlength="15" textareamaxlength="15"/>
                <Cell col="3" text="bind:ADDITIONAL_PRICE" edittype="text" editmaxlength="10" textareamaxlength="10"/>
              </Band>
            </Format>
          </Formats>
        </Grid>
        <!-- 버튼 -->
        <Button id="btn_addRow" text="행추가" left="30" top="660" width="100" height="36" background="#053a5b" color="#ffffff" font="bold 10pt/normal &quot;맑은 고딕&quot;" borderRadius="6px" onclick="btn_addRow_onclick"/>
        <Button id="btn_delRow" text="행삭제" left="140" top="660" width="100" height="36" background="#7f0e0e" color="#ffffff" font="bold 10pt/normal &quot;맑은 고딕&quot;" borderRadius="6px" onclick="btn_delRow_onclick"/>
        <Button id="btn_save" text="저장" left="1040" top="660" width="100" height="40" background="#102b6e" color="#ffffff" font="bold 10pt/normal &quot;맑은 고딕&quot;" borderRadius="6px" onclick="btn_save_onclick"/>
        <Button id="btn_cancel" text="취소" left="1150" top="660" width="100" height="40" background="#bbbbbb" color="#ffffff" font="bold 10pt/normal &quot;맑은 고딕&quot;" borderRadius="6px" onclick="btn_cancel_onclick"/>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[include "common::common.xjs";

this.Form_ProductOptionReg_onload = function(obj,e)
{
    this.ds_optionReg.clearData();
    this.ds_selectedProd.clearData();

    
    var oArgs = this.getOwnerFrame().arguments;
    if (oArgs && oArgs.MODE == "UPDATE") {
        // 수정 모드
        this.transaction(
            "selectOptionOneByAdmin",
            "svc::selectOptionOneByAdmin.do?time=" + new Date().getTime(),
            "",
            "ds_optionReg=ds_optionReg",
            "OPTION_ID=" + oArgs.OPTION_ID,
            "fn_callback",
            true
        );
		
		
		
        this.btn_addRow.set_visible(false);
        this.btn_delRow.set_visible(false);
		this.sta_prodLabel.set_visible(false);
		this.sta_selectedProd.set_visible(false);
		this.btn_searchProd.set_visible(false);
        this.sta_title.set_text("옵션 [ 수정 ] 모드");
    }
    else {
        // 신규 등록 모드 → 기본 한 줄
        var nRow = this.ds_optionReg.addRow();
        this.ds_optionReg.setColumn(nRow, "ADDITIONAL_PRICE", 0);
        this.sta_title.set_text("옵션 [ 등록 ] 모드");
    }
};



// 사용자 ID 반환 함수
this.getUserId = function()
{
    var app = nexacro.getApplication();
    var sUserId = app.gds_adminInfo.getColumn(0, "MEMBER_ID");

    if (sUserId && sUserId != "undefined") {
        trace("현재 로그인 사용자 ID: " + sUserId);
        return sUserId;
    } else {
        trace("사용자 ID를 가져올 수 없습니다. gds_adminInfo 상태 확인 필요");
        return null;
    }
};



// 상품검색 버튼 클릭 → 팝업 열기
this.btn_searchProd_onclick = function(obj, e)
{
	var childFrame = new ChildFrame();
	childFrame.init("ProductSearch",
		(this.width / 2) - 300,
		(this.height / 2) - 200,
		600,400,
		null, null, "product::Form_ProductSearch.xfdl");
	
	childFrame.set_showtitlebar(true);
	childFrame.set_showstatusbar(false);
	childFrame.set_resizable(false);
	
	childFrame.showModal(
		this.getOwnerFrame(), // 부모 Frame
		null, 				//argument 전달
		this,	 			//콜백 받을 대상
		"popupCallback"		//콜백 함수명
	);
};


// 팝업 Callback (상품 선택 결과 반영)
this.popupCallback = function(sPopupId, rtn)
{
    if (sPopupId == "ProductSearch" && rtn) {
        var obj = JSON.parse(rtn);
		
        this.ds_selectedProd.clearData();
        var nRow = this.ds_selectedProd.addRow();
        this.ds_selectedProd.setColumn(nRow, "PRODUCT_ID", obj.PRODUCT_ID.hi);
        this.ds_selectedProd.setColumn(nRow, "PRODUCT_NAME", obj.PRODUCT_NAME);
		
		
        // 옵션 Dataset에도 바로 PRODUCT_ID 세팅
        for (var i=0; i<this.ds_optionReg.getRowCount(); i++) {
            this.ds_optionReg.setColumn(i, "PRODUCT_ID", obj.PRODUCT_ID);
        }
		
		
		// ★ 기존 옵션행 모두 PRODUCT_ID 세팅
        for (var i=0; i<this.ds_optionReg.getRowCount(); i++) {
            this.ds_optionReg.setColumn(i, "PRODUCT_ID", obj.PRODUCT_ID);
        }
		
		
        this.sta_selectedProd.set_text(obj.PRODUCT_NAME);
        this.sta_selectedProd.set_color("#0d47a1");
        this.sta_selectedProd.set_font("bold 11pt 'Arial'");
    }
};





// 행추가
this.btn_addRow_onclick = function()
{
    var nRow = this.ds_optionReg.addRow();
    this.ds_optionReg.setColumn(nRow, "ADDITIONAL_PRICE", 0);
	
	
	// ★ 상품이 이미 선택되어 있다면 PRODUCT_ID 바로 세팅
    if (this.ds_selectedProd.getRowCount() > 0) {
        var prodId = this.ds_selectedProd.getColumn(0, "PRODUCT_ID");
        this.ds_optionReg.setColumn(nRow, "PRODUCT_ID", prodId);
    }
	
	
};

// 행삭제
this.btn_delRow_onclick = function()
{
	
    var nRow = this.ds_optionReg.rowposition;
    if (nRow < 0) {
        this.alert("삭제할 행을 선택하세요.");
        return;
    }
    this.ds_optionReg.deleteRow(nRow);
};



// 저장
this.btn_save_onclick = function()
{
    var oArgs = this.getOwnerFrame().arguments;
    var mode = (oArgs && oArgs.MODE) ? oArgs.MODE : "INSERT"; // 등록 or 수정 구분

    // 상품 선택 여부 검사 (등록 모드일 때만)
    if (mode != "UPDATE" && this.ds_selectedProd.getRowCount() == 0) {
        this.alert("상품을 먼저 선택하세요.");
        return;
    }

    var prodId = this.ds_selectedProd.getRowCount() > 0
               ? this.ds_selectedProd.getColumn(0, "PRODUCT_ID")
               : this.ds_optionReg.getColumn(0, "PRODUCT_ID");

    var sUserId = this.getUserId();

    // 데이터 세팅 및 검증
    for (var i = 0; i < this.ds_optionReg.getRowCount(); i++) {
        this.ds_optionReg.setColumn(i, "PRODUCT_ID", prodId);

        var name = this.ds_optionReg.getColumn(i, "OPTION_NAME");
        var val  = this.ds_optionReg.getColumn(i, "OPTION_VALUE");
		
        var price = this.ds_optionReg.getColumn(i, "ADDITIONAL_PRICE");

        if (!name || name.trim() == "") { this.alert("옵션명을 입력하세요."); return; }
        if (!val || val.trim() == "") { this.alert("옵션값을 입력하세요."); return; }
        if (!price || isNaN(price)) { this.ds_optionReg.setColumn(i, "ADDITIONAL_PRICE", 0); }

        // 등록자 / 수정자 세팅
        if (this.ds_optionReg.getColumn(i, "OPTION_ID"))
            this.ds_optionReg.setColumn(i, "UPDATE_ID", sUserId);
        else
            this.ds_optionReg.setColumn(i, "INPUT_ID", sUserId);
    }

    // 모드별 메시지
    var confirmMsg = (mode == "UPDATE")
        ? "옵션을 수정하시겠습니까?"
        : "옵션을 등록하시겠습니까?";

    var successMsg = (mode == "UPDATE")
        ? "옵션 수정이 완료되었습니다."
        : "옵션 등록이 완료되었습니다.";

    // 컨펌창 띄우기
    this.fn_confirmCustom(confirmMsg, function(ok){
        if (!ok) return;
		
        // 저장 트랜잭션
        this._successMsg = successMsg;
		this.transaction(
			"saveOptionByAdmin",
			"svc::saveOptionByAdmin.do?time=" + new Date().getTime(),
			"ds_optionReg=ds_optionReg:U",
			"",
			"",
			"fn_callback",
			true
        );
        
    }.bind(this));

};




// 취소
this.btn_cancel_onclick = function()
{
    var app = nexacro.getApplication();
    var workFrame = app.mainframe.VFrameSet00.HFrameSet00.VFrameSet01.WorkFrame;
    workFrame.arguments = { REFRESH: "Y"};
    workFrame.set_formurl("product::Form_ProductOption.xfdl");
};


// 콜백
this.fn_callback = function(svcID, errCode, errMsg)
{

	
    if (errCode < 0) {
        this.alert("에러: " + errMsg);
        return;
    }
	
	if (svcID == "saveOptionByAdmin") {
		var app = nexacro.getApplication();
        var workFrame = app.mainframe.VFrameSet00.HFrameSet00.VFrameSet01.WorkFrame;

        workFrame.arguments = {
            REFRESH: "Y",
            MESSAGE: this._successMsg  // 메시지 전달
        };
        workFrame.set_formurl("product::Form_ProductOption.xfdl");
    }
	

	if (svcID == "selectOptionOneByAdmin") {
        console.log(this.ds_optionReg.saveXML());
    }
};

]]></Script>
    <Objects>
      <!-- 옵션 Dataset -->
      <Dataset id="ds_optionReg" useclientlayout="true">
        <ColumnInfo>
          <Column id="OPTION_ID" type="INT"/>
          <Column id="PRODUCT_ID" type="INT"/>
          <Column id="OPTION_NAME" type="STRING" size="15"/>
          <Column id="OPTION_VALUE" type="STRING" size="15"/>
          <Column id="ADDITIONAL_PRICE" type="INT" size="10"/>
          <Column id="INPUT_ID" type="STRING"/>
          <Column id="UPDATE_ID" type="STRING"/>
        </ColumnInfo>
      </Dataset>
      <!-- 선택된 상품 Dataset -->
      <Dataset id="ds_selectedProd">
        <ColumnInfo>
          <Column id="PRODUCT_ID" type="INT"/>
          <Column id="PRODUCT_NAME" type="STRING"/>
        </ColumnInfo>
      </Dataset>
    </Objects>
  </Form>
</FDL>
