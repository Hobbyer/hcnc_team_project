<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="Form_NotificationPopup" width="400" height="600" titletext="알림" onload="Form_NotificationPopup_onload">
    <Layouts>
      <Layout width="400" height="600">
        <Grid id="grd_notification" taborder="0" left="10" top="10" right="10" bottom="60" binddataset="ds_notification" autofittype="col" oncellclick="grd_notification_oncellclick">
          <Formats>
            <Format id="default">
              <Columns>
                <Column size="220"/>
                <Column size="100"/>
                <Column size="61"/>
              </Columns>
              <Rows>
                <Row size="60"/>
              </Rows>
              <Band id="body">
                <Cell text="bind:NOTI_MESSAGE" displaytype="text" edittype="none" wordWrap="char"/>
                <Cell col="1" text="bind:REG_DATE" displaytype="date" edittype="none" calendardateformat="yyyy-MM-dd"/>
                <Cell col="2" displaytype="buttoncontrol" edittype="button" calendardateformat="yyyy-MM-dd" text="✔" cursor="pointer"/>
              </Band>
            </Format>
          </Formats>
        </Grid>
        <Button id="btn_close" taborder="1" text="닫기" left="10" height="35" bottom="10" right="10" onclick="btn_close_onclick"/>
      </Layout>
    </Layouts>
    <Objects>
      <Dataset id="ds_notification">
        <ColumnInfo>
          <Column id="NOTI_ID" type="STRING" size="50"/>
          <Column id="NOTI_MESSAGE" type="STRING" size="500"/>
          <Column id="REG_DATE" type="STRING" size="20"/>
          <Column id="READ_YN" type="STRING" size="1"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_notiId">
        <ColumnInfo>
          <Column id="notiId" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row/>
        </Rows>
      </Dataset>
    </Objects>
    <Script type="xscript5.1"><![CDATA[    this.Form_NotificationPopup_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
    {
        // 알림 목록 조회
        this.loadNotificationList();
    };
    
    // 알림 목록 조회
    this.loadNotificationList = function()
    {
        var strSvcId    = "selectNotificationList";
        var strSvcUrl   = "svc::notification/listNexa.do?time=" + new Date().getTime();
        var inData      = "";
        var outData     = "ds_notification=ds_notification";
        var strArg      = "";
        var callBackFnc = "fn_callback_list";
        var isAsync     = true;
        
        this.transaction(strSvcId, strSvcUrl, inData, outData, strArg, callBackFnc, isAsync);
    };
    
    // 알림 목록 조회 콜백
    this.fn_callback_list = function(strSvcId, nErrorCode, strErrorMsg)
    {
        if (nErrorCode < 0) {
            alert("알림 목록 조회 실패: " + strErrorMsg);
            return;
        }
		switch(strSvcId){
			case "selectNotificationList" :
			break;
		}
    };
    
    // 그리드 셀 클릭 - 읽음 처리
    this.grd_notification_oncellclick = function(obj:nexacro.Grid,e:nexacro.GridClickEventInfo)
    {
		// col="2" (✔ 버튼) 클릭 시에만 실행
		if (e.col == 2) {
			var notiId = this.ds_notification.getColumn(e.row, "NOTI_ID");
			var readYn = this.ds_notification.getColumn(e.row, "READ_YN");
			
			this.ds_notiId.setColumn(0,"notiId",notiId)
			
			trace("버튼 클릭 - 알림 ID: " + notiId + ", 읽음 여부: " + readYn);
			
			if (readYn == "N") {
				this.markAsRead(notiId, e.row);
			} else {
				trace("이미 읽은 알림입니다");
			}
		}
    };
    
    // 읽음 처리
    this.markAsRead = function(notiId, row)
    {
        var strSvcId    = "updateReadStatus";
        var strSvcUrl   = "svc::notification/markAsReadNexa.do?time=" + new Date().getTime();
        var inData      = "ds_notiId=ds_notiId";
        var outData     = "";
        var strArg      = "";
        var callBackFnc = "fn_callback_read";
        var isAsync     = true;
        
        this.transaction(strSvcId, strSvcUrl, inData, outData, strArg, callBackFnc, isAsync);
    };
    
    // 읽음 처리 콜백
    this.fn_callback_read = function(strSvcId, nErrorCode, strErrorMsg)
    {
        if (nErrorCode < 0) {
            alert("읽음 처리 실패");
            return;
        }
		switch(strSvcId){
			case "updateReadStatus" :
				this.loadNotificationList();
			break;
		}
    };
    
    // 닫기 버튼
    this.btn_close_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
    {
        this.close("refresh");
    };]]></Script>
  </Form>
</FDL>
